{"version":3,"file":"static/js/961.40d32687.chunk.js","mappings":"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","sources":["API/Api.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios'\nconst apiKey = '802712c8bad18fed91462bf1a55b27d1'\naxios.defaults.baseURL = 'https://api.themoviedb.org/3'\nconst Params = {\n    trending: 'trending/all/day',\n    search: 'search/movie',\n    movieId: 'movie/',\n    reviews: '/reviews',\n    credits: '/credits',\n}\n\nexport const trendingMoviesFetch = async() => {\n    const response = await axios.get(`/${Params.trending}?api_key=${apiKey}`)\n    return response.data.results\n}\n\nexport const searchMovieFetch = async query => {\n    const response = await axios.get(`/${Params.search}?api_key=${apiKey}&query=${query}&language=en-US&page=1&include_adult=false`)\n return response.data.results\n}\n\nexport const movieIDFetch = async movieId => {\n    const response = await axios.get(`/${Params.movieId}${movieId}?api_key=${apiKey}&language=en-US`)\n    return response.data\n}\n\nexport const reviewFetch = async movieId => {\n    const response = await axios.get(`/${Params.movieId}${movieId}${Params.reviews}?api_key=${apiKey}&language=en-US`);\n    return response.data.results;\n}\n\nexport const creditsFetch = async movieId => {\n    const response = await axios.get(`/${Params.movieId}${movieId}${Params.credits}?api_key=${apiKey}&language=en-US`);\n    return response.data.cast;\n}\n\n\n","import React, { useEffect, useState } from \"react\";\nimport { useParams, Link, Outlet, useLocation } from \"react-router-dom\";\nimport { movieIDFetch } from \"../../API/Api.jsx\";\nimport Loader from '../../components/Loader/Loader.jsx';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    console.log(\"Fetching movie details for movieId:\", movieId);\n    const fetchMovieDetails = async () => {\n      setLoading(true);\n      try {\n        const detailMovie = await movieIDFetch(movieId);\n        console.log(\"Detail Movie:\", detailMovie);\n        setMovieInfo(detailMovie);\n      } catch (error) {\n        console.error(\"Error fetching movie details:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  if (!movieInfo) {\n    return (\n      <div>\n        {loading && <Loader />}\n        <p>Loading...</p>\n      </div>\n    );\n  }\n\n  const { title, release_date, popularity, overview, genres, poster_path, original_title } = movieInfo;\n\n  return (\n    <div>\n      <Link to={location.state?.from ?? '/'}><button type=\"button\">Return</button></Link>\n      {loading && <Loader />}\n      <div>\n        <img\n          width=\"300px\"\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\n              : `https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg`\n          }\n          alt={original_title}\n        />\n      </div>\n      <div>\n        <h1>\n          {title} ({release_date.slice(0, 4)})\n        </h1>\n        <p>User score: {popularity}</p>\n        <h2>Overview</h2>\n        <p>{overview}</p>\n        <h2>Genres</h2>\n        <ul>\n          {genres.map((genre) => (\n            <li key={genre.id}>{genre.name}</li>\n          ))}\n        </ul>\n      </div>\n      <hr />\n      <h3>Additional information</h3>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <hr />\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetails;"],"names":["apiKey","axios","Params","trendingMoviesFetch","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","results","stop","apply","arguments","searchMovieFetch","_ref2","_callee2","query","_context2","_x","movieIDFetch","_ref3","_callee3","movieId","_context3","_x2","reviewFetch","_ref4","_callee4","_context4","_x3","creditsFetch","_ref5","_callee5","_context5","cast","_x4","_location$state$from","_location$state","useParams","_useState","useState","_useState2","_slicedToArray","movieInfo","setMovieInfo","_useState3","_useState4","loading","setLoading","location","useLocation","useEffect","console","log","fetchMovieDetails","detailMovie","t0","error","finish","_jsxs","children","_jsx","Loader","title","release_date","popularity","overview","genres","poster_path","original_title","Link","to","state","from","type","width","src","alt","slice","map","genre","name","id","Outlet"],"sourceRoot":""}