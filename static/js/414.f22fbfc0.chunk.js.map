{"version":3,"file":"static/js/414.f22fbfc0.chunk.js","mappings":"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","sources":["API/Api.jsx","pages/EditorList/EditorList.jsx","components/Form/Form.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios'\nconst apiKey = '802712c8bad18fed91462bf1a55b27d1'\naxios.defaults.baseURL = 'https://api.themoviedb.org/3'\nconst Params = {\n    trending: 'trending/all/day',\n    search: 'search/movie',\n    movieId: 'movie/',\n    reviews: '/reviews',\n    credits: '/credits',\n}\n\nexport const trendingMoviesFetch = async() => {\n    const response = await axios.get(`/${Params.trending}?api_key=${apiKey}`)\n    return response.data.results\n}\n\nexport const searchMovieFetch = async query => {\n    const response = await axios.get(`/${Params.search}?api_key=${apiKey}&query=${query}&language=en-US&page=1&include_adult=false`)\n return response.data.results\n}\n\nexport const movieIDFetch = async movieId => {\n    const response = await axios.get(`/${Params.movieId}${movieId}?api_key=${apiKey}&language=en-US`)\n    return response.data\n}\n\nexport const reviewFetch = async movieId => {\n    const response = await axios.get(`/${Params.movieId}${movieId}${Params.reviews}?api_key=${apiKey}&language=en-US`);\n    return response.data.results;\n}\n\nexport const creditsFetch = async movieId => {\n    const response = await axios.get(`/${Params.movieId}${movieId}${Params.credits}?api_key=${apiKey}&language=en-US`);\n    return response.data.cast;\n}\n\n\n","import { useLocation, Link } from \"react-router-dom\";\n\nconst EditorList = ({films}) => {\n    const location = useLocation()\n\n    return(\n   <ul>\n    {films.map(film => (\n        <li key={film.id}>\n    <Link to={`/movie/${film.id}`} state={{form: location}}>{film.title}</Link>\n        </li>\n    ))}\n   </ul>\n    ) \n}\n\n\n  export default EditorList","import { useState } from \"react\";\nimport PropTypes from 'prop-types'\n\nconst Form =({searchMovies}) => {\n    const [query, setQuery] = useState('')\n    const handleInputChange = (event) => {\n        setQuery(event.target.value)\n    }\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        searchMovies(query.toLowerCase()) \n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n        <input\n        type=\"text\"\n        name=\"query\"\n        autoFocus\n        value={query}\n        placeholder=\"Search movies\"\n        onChange={handleInputChange} />\n\n            <button type=\"submit\">Search</button>\n        </form>\n    )\n}\n\nForm.propTypes = {\n    searchMovies: PropTypes.func.isRequired\n}\n\nexport default Form","import { useState } from \"react\";\nimport Loader from '../../components/Loader/Loader.jsx'\nimport EditorList from '../EditorList/EditorList.jsx'\nimport Form from '../../components/Form/Form.jsx'\nimport { searchMovieFetch } from \"API/Api\";\n\nconst Movies = () => {\n    const [searchFilms, setSearchFilms] = useState([])\n    const [loading, setLoading] = useState(false)\n    const [noMoviesText, setNoMoviesText] = useState(false)\n    const searchMovies = queryMovie => {\n        setLoading(true)\n        searchMovieFetch(queryMovie).then(searchResults => {setSearchFilms(searchResults)\n        setNoMoviesText(searchResults.legth === 0)}).catch(error => {console.log(error)}).finally(() => {setLoading(false)})\n\n    }\n\n    return (\n        <div>\n            <Form searchMovies={searchMovies}/>\n            {loading && <Loader/>}\n            {noMoviesText && (<p>No results. Please, try again</p>)}\n            {searchFilms && <EditorList films={searchFilms}/>}\n        </div>\n    )\n}\n\nexport default Movies"],"names":["apiKey","axios","Params","trendingMoviesFetch","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","results","stop","apply","arguments","searchMovieFetch","_ref2","_callee2","query","_context2","_x","movieIDFetch","_ref3","_callee3","movieId","_context3","_x2","reviewFetch","_ref4","_callee4","_context4","_x3","creditsFetch","_ref5","_callee5","_context5","cast","_x4","films","location","useLocation","_jsx","children","map","film","Link","to","id","state","form","title","searchMovies","_useState","useState","_useState2","_slicedToArray","setQuery","_jsxs","onSubmit","event","preventDefault","toLowerCase","type","name","autoFocus","value","placeholder","onChange","target","searchFilms","setSearchFilms","_useState3","_useState4","loading","setLoading","_useState5","_useState6","noMoviesText","setNoMoviesText","Form","queryMovie","then","searchResults","legth","catch","error","console","log","finally","Loader","EditorList"],"sourceRoot":""}